Index: app/src/main/java/com/android/androidfundamentalsgroup1/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.android.androidfundamentalsgroup1;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.SeekBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {\r\n    private final String ANDROID_DOCS = \"https://developer.android.com/\";\r\n    private final String TAG = \"MainActivity\";\r\n\r\n    private TextView oneTextView;\r\n    private EditText editTextUserFullName;\r\n    private CheckBox checkBoxTermsAndConditions;\r\n    private SeekBar seekBarCountChallenges;\r\n    private TextView textViewPurpleContent;\r\n    private Button buttonGetContent;\r\n    private WebView webViewAndroid;\r\n    private Spinner spinnerAndroidVersions;\r\n    private RecyclerView recyclerViewEmails;\r\n\r\n    private List<Email> emails;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // seteaza layout-ul asociat activatii MainActivity\r\n        // setContentView(R.layout.activity_main);\r\n        // asociem views_sample_1 ca layout al activitatii MainActivity\r\n        // setContentView(R.layout.views_sample_1);\r\n        // displayViewsSample1();\r\n\r\n        // run ScrollView sample\r\n        // setContentView(R.layout.views_sample_scroll_view);\r\n\r\n        // run WebView sample\r\n        // setContentView(R.layout.views_sample_web_view);\r\n        // loadUrlInWebView();\r\n\r\n        // run Spinner sample\r\n        // setContentView(R.layout.views_sample_spinner);\r\n        // setupSpinnerAdapter();\r\n\r\n        // run RecyclerView sample\r\n        // setContentView(R.layout.views_sample_recycler_view);\r\n        // displayEmailsList();\r\n\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Logging.show(TAG, \"onCreate\");\r\n\r\n        int result = sum(10, 5, 4);\r\n        Logging.show(\"MainActivity result = \", result + \"\");\r\n        result++;\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        Logging.show(TAG, \"onStart\");\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        Logging.show(TAG, \"onResume\");\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        Logging.show(TAG, \"onPause\");\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        Logging.show(TAG, \"onStop\");\r\n    }\r\n\r\n    private int sum(int a, int b, int c) {\r\n        int result = a / b;\r\n        return result + c;\r\n    }\r\n\r\n    // RecyclerView implementation\r\n    // get data source\r\n    private void inbox() {\r\n        emails = new ArrayList<>();\r\n        Email email = null;\r\n        for (int i = 0; i < 25; i++) {\r\n            email = new Email(0, \"Magda \" + i, \"Hello Android \" + i, \"This is an intro about Android\");\r\n            emails.add(email);\r\n        }\r\n    }\r\n\r\n    // step 4 = Define the LayoutManager in activity\r\n    // set the layout manager, in our case LinearLayoutManager because it's a list of emails\r\n    private void setEmailsLayoutManager() {\r\n        recyclerViewEmails = findViewById(R.id.recyclerViewEmails);\r\n        recyclerViewEmails.setLayoutManager(new LinearLayoutManager(this));\r\n    }\r\n\r\n    private void setEmailsAdapter() {\r\n        recyclerViewEmails.setAdapter(new EmailAdapter(this, emails));\r\n    }\r\n\r\n    private void displayEmailsList() {\r\n        // data source - checked\r\n        inbox();\r\n\r\n        // layout manager - checked\r\n        setEmailsLayoutManager();\r\n\r\n        // adapter - checked\r\n        setEmailsAdapter();\r\n    }\r\n\r\n    // Spinner implementation\r\n    // step 1 = get the data source for the Spinner\r\n    private List<String> getSpinnerAndroidDataSource() {\r\n        List<String> androidVersions = new ArrayList<>();\r\n        androidVersions.add(\"Cupcake\");\r\n        androidVersions.add(\"Donut\");\r\n        androidVersions.add(\"Eclair\");\r\n        androidVersions.add(\"KitKat\");\r\n        androidVersions.add(\"Pie\");\r\n        return androidVersions;\r\n    }\r\n\r\n    // step 2 = get the adapter\r\n    private ArrayAdapter<String> getSpinnerAdapter() {\r\n        return new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, getSpinnerAndroidDataSource());\r\n    }\r\n\r\n    // step 3 = set the adapter to the spinner\r\n    private void setupSpinnerAdapter() {\r\n        spinnerAndroidVersions = findViewById(R.id.spinnerAndroidVersions);\r\n        spinnerAndroidVersions.setAdapter(getSpinnerAdapter());\r\n        // let the Spinner to know that we implemented the setOnItemSelectedListener event at the Activity level\r\n        spinnerAndroidVersions.setOnItemSelectedListener(this);\r\n    }\r\n\r\n    private void loadUrlInWebView() {\r\n        webViewAndroid = findViewById(R.id.webViewAndroid);\r\n        WebSettings webSettings = webViewAndroid.getSettings();\r\n        webSettings.setJavaScriptEnabled(true);\r\n        webViewAndroid.loadUrl(ANDROID_DOCS);\r\n    }\r\n\r\n    private void displayViewsSample1() {\r\n        oneTextView = findViewById(R.id.firstTextView);\r\n        oneTextView.setText(R.string.new_text);\r\n\r\n        editTextUserFullName = findViewById(R.id.editTextFullName);\r\n        editTextUserFullName.setText(R.string.default_full_name);\r\n\r\n        checkBoxTermsAndConditions = findViewById(R.id.checkboxTermsAndConditions);\r\n        if (checkBoxTermsAndConditions.isChecked()) {\r\n            checkBoxTermsAndConditions.setChecked(false);\r\n            oneTextView.setText(R.string.checkbox_checked);\r\n        } else {\r\n            checkBoxTermsAndConditions.setChecked(true);\r\n            oneTextView.setText(R.string.checkbox_unchecked);\r\n        }\r\n\r\n        checkBoxTermsAndConditions.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\r\n                if (compoundButton.isChecked()) {\r\n                    editTextUserFullName.setText(R.string.checkbox_state_checked);\r\n                } else {\r\n                    editTextUserFullName.setText(R.string.checkbox_state_unchecked);\r\n                }\r\n            }\r\n        });\r\n\r\n        seekBarCountChallenges = findViewById(R.id.seekBarChallenges);\r\n        seekBarCountChallenges.setProgress(5);\r\n\r\n        textViewPurpleContent = findViewById(R.id.textViewPurpleContent);\r\n\r\n        buttonGetContent = findViewById(R.id.buttonGetContent);\r\n        // block comment/un-comment CTRL + Shift + /\r\n        /*buttonGetContent.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                // preluam contentul din EditText si il convertim in String\r\n                String contentFromEditText = editTextUserFullName.getText().toString();\r\n                if (contentFromEditText != null && contentFromEditText.length() > 0) {\r\n                    textViewPurpleContent.setText(contentFromEditText);\r\n                } else {\r\n                    editTextUserFullName.setError(getString(R.string.error_missing_text));\r\n                }\r\n            }\r\n        });*/\r\n    }\r\n\r\n    public void buttonGetContentOnClick(View view) {\r\n        // preluam contentul din EditText si il convertim in String\r\n        String contentFromEditText = editTextUserFullName.getText().toString();\r\n        if (contentFromEditText != null && contentFromEditText.length() > 0) {\r\n            textViewPurpleContent.setText(contentFromEditText);\r\n        } else {\r\n            editTextUserFullName.setError(getString(R.string.error_missing_text));\r\n        }\r\n    }\r\n\r\n    // params: list, child, position, adapter.getItemId(position)\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> adapterView, View view, int position, long itemId) {\r\n        List<String> androidVersions = getSpinnerAndroidDataSource();\r\n        String selectedVersion = androidVersions.get(position);\r\n        Toast.makeText(MainActivity.this, selectedVersion, Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> adapterView) {\r\n    }\r\n\r\n    public void buttonOpenSecondActivityOnClick(View view) {\r\n        Intent secondActivity = new Intent(MainActivity.this, SecondActivity.class);\r\n        startActivity(secondActivity);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/androidfundamentalsgroup1/MainActivity.java	(revision 1c81acb8ffea894ba07e6a20c380834358c17800)
+++ app/src/main/java/com/android/androidfundamentalsgroup1/MainActivity.java	(date 1608052886092)
@@ -37,6 +37,7 @@
     private WebView webViewAndroid;
     private Spinner spinnerAndroidVersions;
     private RecyclerView recyclerViewEmails;
+    public static final String MESSAGE_KEY = "message";
 
     private List<Email> emails;
 
@@ -239,6 +240,12 @@
 
     public void buttonOpenSecondActivityOnClick(View view) {
         Intent secondActivity = new Intent(MainActivity.this, SecondActivity.class);
+        secondActivity.putExtra(MESSAGE_KEY, getString(R.string.hello_world));
         startActivity(secondActivity);
     }
+
+    public void buttonCommunicationBetweenActiviesOnClick(View view) {
+
+
+    }
 }
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView4\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/hello_world\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button4\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/open_second_activity\"\r\n        android:onClick=\"buttonOpenSecondActivityOnClick\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView4\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 1c81acb8ffea894ba07e6a20c380834358c17800)
+++ app/src/main/res/layout/activity_main.xml	(date 1608052908532)
@@ -26,4 +26,28 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/textView4" />
 
+    <Button
+        android:id="@+id/button5"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="64dp"
+        android:onClick="buttonCommunicationBetweenActiviesOnClick"
+        android:text="@string/start_activityforresult"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.497"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView4" />
+
+    <EditText
+        android:id="@+id/editTextTextMessage"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:ems="10"
+        android:hint="Write a message here"
+        android:inputType="textPersonName"
+        android:text="Name"
+        app:layout_constraintBottom_toTopOf="@+id/textView4"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">AndroidFundamentalsGroup1</string>\r\n    <string name=\"yes\">yes</string>\r\n    <string name=\"no\">no</string>\r\n    <string name=\"wi_fi\">Wi-fi</string>\r\n    <string name=\"search_for_names\">Search for names</string>\r\n    <string name=\"our_first_textview\">Our first TextView</string>\r\n    <string name=\"i_am_a_button\">I am a button</string>\r\n    <string name=\"full_name\">Full name</string>\r\n    <string name=\"a_accept_t_and_c\">A accept T and C</string>\r\n    <string name=\"first_text\">first text</string>\r\n    <string name=\"second_text\">second text</string>\r\n    <string name=\"new_text\">This is the new text</string>\r\n    <string name=\"default_full_name\">Magda Miu</string>\r\n    <string name=\"checkbox_checked\">Checkbox was checked</string>\r\n    <string name=\"checkbox_unchecked\">Checkbox was unchecked</string>\r\n    <string name=\"checkbox_state_checked\">Checkbox checked</string>\r\n    <string name=\"checkbox_state_unchecked\">Checkbox unchecked</string>\r\n    <string name=\"error_missing_text\">Please add some text</string>\r\n    <string name=\"top_long_text\">Android is a mobile operating system based on a modified version of the Linux kernel and other open source software, designed primarily for touchscreen mobile devices such as smartphones and tablets. Android is developed by a consortium of developers known as the Open Handset Alliance and commercially sponsored by Google. It was unveiled in November 2007, with the first commercial Android device launched in September 2008.  It is free and open source software; its source code is known as Android Open Source Project (AOSP), which is primarily licensed under the Apache License. However most Android devices ship with additional proprietary software pre-installed,[10] most notably Google Mobile Services (GMS)[11] which includes core apps such as Google Chrome, the digital distribution platform Google Play and associated Google Play Services development platform. About 70 percent of Android smartphones run Google\\'s ecosystem;[12] competing Android ecosystems and forks include Fire OS (developed by Amazon) or LineageOS. However the \\\"Android\\\" name and logo are trademarks of Google which impose standards to restrict \\\"uncertified\\\" devices outside their ecosystem to use Android branding</string>\r\n    <string name=\"bottom_long_text\">The source code has been used to develop variants of Android on a range of other electronics, such as game consoles, digital cameras, portable media players, PCs and others, each with a specialized user interface. Some well known derivatives include Android TV for televisions and Wear OS for wearables, both developed by Google. Software packages on Android, which use the APK format, are generally distributed through proprietary application stores like Google Play Store, Samsung Galaxy Store, and Huawei AppGallery, or open source platforms like Aptoide or F-Droid.  Android has been the best-selling OS worldwide on smartphones since 2011 and on tablets since 2013. As of May 2017, it has over two billion monthly active users, the largest installed base of any operating system, and as of August 2020, the Google Play Store features over 3 million apps.[15] The current stable version is Android 11, released on September 8, 2020.</string>\r\n    <string name=\"select_an_android_version\">Select an Android version</string>\r\n    <string name=\"textview\">TextView</string>\r\n    <string name=\"hello_world\">Hello World!</string>\r\n    <string name=\"open_second_activity\">Open Second Activity</string>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 1c81acb8ffea894ba07e6a20c380834358c17800)
+++ app/src/main/res/values/strings.xml	(date 1608052886098)
@@ -23,4 +23,5 @@
     <string name="textview">TextView</string>
     <string name="hello_world">Hello World!</string>
     <string name="open_second_activity">Open Second Activity</string>
+    <string name="start_activityforresult">Start activityForResult</string>
 </resources>
